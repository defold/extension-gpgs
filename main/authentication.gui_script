local dirtylarry = require "dirtylarry.dirtylarry"
local monarch = require "monarch.monarch"


function gpgs_callback(self, message_id, message)
	if message_id == gpgs.MSG_SIGN_IN or message_id == gpgs.MSG_SILENT_SIGN_IN then
		if message.status == gpgs.STATUS_SUCCESS then
			gui.set_text(gui.get_node("id"), gpgs.get_id())
			gui.set_text(gui.get_node("name"), gpgs.get_display_name())

			if sys.get_config("gpgs.client_id") then
				print("id_token: ", gpgs.get_id_token())
				print("auth_code: ", gpgs.get_server_auth_code())
			end
		end
	elseif message_id == gpgs.MSG_SIGN_OUT then
		gui.set_text(gui.get_node("id"), "---")
		gui.set_text(gui.get_node("name"), "---")
	end
	gui.set_text(gui.get_node("authorized"), "is_logged_in: " .. tostring(gpgs.is_logged_in()))
end

function init(self)
	msg.post(".", "acquire_input_focus")
	if gpgs then
		gpgs.set_callback(gpgs_callback)
		gpgs.silent_login()
	end
end

function on_input(self, action_id, action)
	dirtylarry:button("login", action_id, action, function ()
		print("LOGIN was pressed")
		if gpgs then
			gpgs.login()
		end
	end)

	dirtylarry:button("logout", action_id, action, function ()
		print("LOGOUT was pressed")
		if gpgs then
			gpgs.logout()
		end
	end)

	dirtylarry:button("back", action_id, action, function ()
		monarch.back()
	end)
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
