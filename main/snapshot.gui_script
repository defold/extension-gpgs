local dirtylarry = require "dirtylarry.dirtylarry"
local monarch = require "monarch.monarch"


local use_saved_games = sys.get_config("gpgs.use_saved_games") == "1"

function gpgs_callback(self, message_id, message)
    if message_id == gpgs.MSG_LOAD_SNAPSHOT then
        if message.status == gpgs.STATUS_CONFLICT then
            self.conflictId = message.conflictId
        end
    end
end

function init(self)
    msg.post(".", "acquire_input_focus")
    if gpgs then
        gpgs.set_callback(gpgs_callback)
    end
end

function update(self, dt)
    if gpgs and use_saved_games then
        if self.snapshot_is_opened ~= gpgs.snapshot_is_opened() then
            self.snapshot_is_opened = gpgs.snapshot_is_opened()
            gui.set_text(gui.get_node("snapshotOpened"), "snapshot_is_opened: "..tostring(gpgs.snapshot_is_opened()))
        end
        if self.conflictId then
            gui.set_text(gui.get_node("snapshotConflict"), "conflict: "..tostring(self.conflictId))
        else
            gui.set_text(gui.get_node("snapshotConflict"), "no conflict")
        end
    end
end

function on_input(self, action_id, action)
    dirtylarry:button("show_snapshots", action_id, action, function ()
        if gpgs then
            gpgs.snapshot_display_saves("My cool saves", true, true, 3)
        end
    end)

    dirtylarry:button("snapshot_open", action_id, action, function ()
        if gpgs then
            gpgs.snapshot_open("my_save", true, gpgs.RESOLUTION_POLICY_MANUAL)
        end
    end)

    dirtylarry:button("snapshot_get_data", action_id, action, function ()
        if gpgs then
            local bytes, error_message = gpgs.snapshot_get_data()
            if not bytes then
                print("snapshot_get_data ERROR:", error_message)
            else
                print("snapshot_get_data",bytes)
            end
        end
    end)

    dirtylarry:button("save_snapshot", action_id, action, function ()
        if gpgs then
            local png, w, h = screenshot.png()
            gpgs.snapshot_commit_and_close({
                coverImage = png,
                description = "LEVEL 31, CAVE",
                playedTime = math.random(1000, 2000),
                progressValue = math.random(1000, 2000)
            })
        end
    end)

    dirtylarry:button("snapshot_get_conflicting_data", action_id, action, function ()
        if gpgs then
            local bytes, error_message = gpgs.snapshot_get_conflicting_data()
            if not bytes then
                print("snapshot_get_conflicting_data ERROR: ", error_message)
            else
                print("snapshot_get_conflicting_data: ",bytes)
            end
        end
    end)

    dirtylarry:button("snapshot_set_data", action_id, action, function ()
        if gpgs then
            local success, error_message = gpgs.snapshot_set_data("MyCustomBytesForSnapshot")
            if not success then
                print("snapshot_set_data ERROR:", error_message)
            end
        end
    end)

    dirtylarry:button("snapshot_resolve_conflict", action_id, action, function ()
        if gpgs then
            local success, error_message = gpgs.snapshot_resolve_conflict(self.conflictId, gpgs.SNAPSHOT_CURRENT)
            if not success then
                print("snapshot_resolve_conflict ERROR:", error_message)
            end
        end
    end)

    dirtylarry:button("snapshot_resolve_conflict_conflicting", action_id, action, function ()
        if gpgs then
            gpgs.snapshot_resolve_conflict(self.conflictId, gpgs.SNAPSHOT_CONFLICTING)
        end
    end)

    dirtylarry:button("back", action_id, action, function ()
        monarch.back()
    end)
    
end